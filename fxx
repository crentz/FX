#!/bin/bash

#       @(#)Copyright (c) 2023 Petre C. Crentz
#		( crentzc@gmail.com )
#       This file is provided in the hope that it will
#       be of use.  There is absolutely NO WARRANTY.
#       Permission to copy, redistribute or otherwise
#       use this file is hereby granted provided that
#       this notice is to be left intact.
#       You may modify in any way but you have to mention
#
#		Fluxuan Linux 
#		in the begining thank you, for any help, 
#		https://fluxuan.org - https://forums.fluxuan.org
#		Thank you for your interest in Fluxuan Linux !!

# Creating a Configuration file
CONF=${disk_conf:="/tmp/disk.conf"}

# Writing in the Configuration file
d_conf () {
	local _conf=$1 _value=$2
	printf '%s\n' "${_conf}=${_value}" >> "$CONF"
}
d_conf

# Getting data from Configuration File
d_read () {
	local _conf=$1
	grep "${_conf}" "$CONF" | cut -d '=' -f2
}
d_read

#Checking if user is root before proceeding
check_root () {
if [ "$(id -u)" -ne 0 ]; then 
whiptail --title "Fluxuan-Installer" --msgbox "It appears that you are running this installer as user.

Please run as ROOT (e. g.:  sudo bash fxi.sh) 
-------------------------------------------------------
Thank you for your interest in Fluxuan Linux.

https://Fluxuan.org - https://Forums.Fluxuan.org" 20 70 ;
 
else
	return 0
fi

}
check_root

# Display a Welcome message to the user
welcome_msg () {
whiptail --title "Fluxuan-Installer" --msgbox "Welcome to Fluxuan Linux Installer.

This installer will guide you to the rest of the setup process.
--------------------------------------------------------------
Thank you for your interest in Fluxuan Linux.

https://Fluxuan.org - https://Forums.Fluxuan.org" 20 70

}
welcome_msg

# Select Installation Drive
select_drive() {

disk=$(whiptail --inputbox "Choose one of your available devices (e.g. sdX):
------------------------------------------------

$(lsblk -n --output TYPE,NAME,SIZE,MODEL | awk '$1=="disk"{print i++,"->",$2,$3,$4}')" 20 70 sdX --title "Fluxuan-Installer" 3>&1 1>&2 2>&3)
exitstatus=$?
if [ $exitstatus = 0 ]; then
    d_conf DISK "$disk"
else
 whiptail --title "Fluxuan-Installer" --msgbox "Thank you for using Fluxuan-Installer.
 
If I can help in any way please do not hesitate to ask on our Forums!

https://fluxuan.org     https://forums.fluxuan.org" 20 70
	rm "$CONF"
	clear ;
    exit 1 ;
fi

mode=$(whiptail --inputbox "Will you boot in bios or EFI mode (-- bios or EFI --)?
------------------------------------------------------" 20 70 bios --title "Fluxuan-Installer" 3>&1 1>&2 2>&3)
exitstatus=$?
if [ $exitstatus = 0 ]; then
    d_conf MODE "$mode"
else
	rm "$CONF"
	clear ;
    exit 1 ;
fi
}
select_drive

# Ask user if he wants to use SWAP
create_swap() {
if (whiptail --title "Fluxuan-Installer" --yesno "Would you like to use SWAP?" 20 70); then
	d_conf SWAP "YES"
	else
	d_conf SWAP "NO"
  	return 0;
	fi
}
create_swap

# Drive Partitioning
partitioning() {
  local _disk _mode
  _disk=$(d_read DISK)
  _mode=$(d_read MODE)

  CHOICE=$(whiptail --title Fluxuan-Installer --menu "Choose one of the following options." 20 70 5 \
    1 "Guided - use entire disk (recommended for new users)" \
    2 "Guided - separate boot partition" \
    3 "Guided - separate boot and home partitions" 3>&2 2>&1 1>&3)

  case $CHOICE in
    1) one ;;
    2) two ;;
    3) three ;;
  esac
}

one() {
  # Function for Guided - use entire disk
  	if [ "$_mode" == "bios" ]; then
		parted -s /dev/"$_disk" mklabel msdos
		parted -s /dev/"$_disk" mkpart primary ext2 1 100%
		parted -s /dev/"$_disk" set 1 boot on 
	else
		parted -s /dev/"$_disk" mklabel msdos
		parted -s /dev/"$_disk" mkpart primary ext2 1 100%
		parted -s /dev/"$_disk" set 1 boot on
	fi	
	if [ "$_mode" == "bios" ]; then
		mkfs.ext4 /dev/"$_disk"1 >> /dev/null 2>&1
	else
		mkfs.ext4 /dev/"$_disk"1 >> /dev/null 2>&1
	fi
		partx -u /dev/"$_disk"
		mount /dev/"$_disk"1 /mnt
	if [ "$_mode" == "bios" ]; then
		mkdir -p /mnt/boot
	else
		mkdir -p /mnt/boot/efi
	fi
}

two() {
  # Function for Guided - separate boot partition
  if [ "$_mode" == "bios" ]; then
		parted -s /dev/"$_disk" mklabel msdos
		parted -s /dev/"$_disk" mkpart primary ext2 1 100MB
		parted -s /dev/"$_disk" set 1 boot on 
	else
		parted -s /dev/"$_disk" mklabel gpt
		parted -s /dev/"$_disk" mkpart primary ext2 1 100MB
		parted -s /dev/"$_disk" set 1 ESP on
	fi	
	parted -s /dev/"$_disk" mkpart primary ext2 100MB 100%
	mkfs.ext4 /dev/"$_disk"2 >> /dev/null 2>&1
	if [ "$_mode" == "bios" ]; then
		mkfs.ext4 /dev/"$_disk"1 >> /dev/null 2>&1
	else
		mkfs.fat -F 32 /dev/"$_disk"1 >> /dev/null 2>&1
	fi
		partx -u /dev/"$_disk"
		mount /dev/"$_disk"2 /mnt
	if [ "$_mode" == "bios" ]; then
		mkdir -p /mnt/boot
		mount /dev/"$_disk"1 /mnt/boot
	else
		mkdir -p /mnt/boot/efi
		mount /dev/"$_disk"1 /mnt/boot/efi
	fi
}

three() {
  # Function for Guided - separate boot and home partitions
  if [ "$_mode" == "bios" ]; then
		parted -s /dev/"$_disk" mklabel msdos
		parted -s /dev/"$_disk" mkpart primary ext2 1 100MB
		parted -s /dev/"$_disk" set 1 boot on 
	else
		parted -s /dev/"$_disk" mklabel gpt
		parted -s /dev/"$_disk" mkpart primary ext2 1 100MB
		parted -s /dev/"$_disk" set 1 ESP on
	fi	
	rsize=$(whiptail --inputbox "Size of your ROOT Partition (ex. 40GB)?\nThe rest of the drive will be HOME Partition.\n
------------------------------------------------------" 20 70 30GB --title "Fluxuan-Installer" 3>&1 1>&2 2>&3)
exitstatus=$?
if [ $exitstatus = 0 ]; then
    parted -s /dev/"$_disk" mkpart primary ext2 100MB "$rsize"
    parted -s /dev/"$_disk" mkpart primary ext2 "$rsize" 100%
else
	whiptail --title "Fluxuan-Installer" --msgbox "Thank you for using Fluxuan-Installer.
 
If I can help in any way please do not hesitate to ask on our Forums!

https://fluxuan.org     https://forums.fluxuan.org" 20 70
	rm "$CONF"
	clear ;
    exit 1 ;
fi
	
	if [ "$_mode" == "bios" ]; then
		mkfs.ext4 /dev/"$_disk"1 >> /dev/null 2>&1
	else
		mkfs.fat -F 32 /dev/"$_disk"1 >> /dev/null 2>&1
	fi
	mkfs.ext4 /dev/"$_disk"2 >> /dev/null 2>&1
	mkfs.ext4 /dev/"$_disk"3 >> /dev/null 2>&1
		partx -u /dev/"$_disk"
		mount /dev/"$_disk"2 /mnt
		if [ "$_mode" == "bios" ]; then
		mkdir -p /mnt/boot
		mount /dev/"$_disk"1 /mnt/boot
	else
		mkdir -p /mnt/boot/efi
		mount /dev/"$_disk"1 /mnt/boot/efi
	fi
	mkdir -p /mnt/home
	mount /dev/"$_disk"3 /mnt/home
}

# Call the partitioning function
partitioning


# Performing install
offline_inst () {
        rsync -av --exclude={"/dev/*","/proc/*","/sys/*","/run/*","/tmp/*","/swapfile","/cdrom/*","/mnt","/live","/boot/grub/grub.cfg","/boot/grub/menu.lst","/boot/grub/device.map","/etc/udev/rules.d/70-persisten-cd.rules","/etc/udev/rules.d/70-persistent-net.rules","/etc/fstab","/etc/mtab","/home/snapshot","/home/fxs","/home/*/.gvfs","/mnt/*","/media/*","/lost+found","/usr/bin/welcome","/var/swapfile","/home/fluxuan/.fluxbox/menuresolution"} / /mnt

}
offline_inst


# Installing Swap File and mounting folders for chroot
mk_swap () {
	local _swap
	_swap=$(d_read SWAP)
	bash -c 'genfstab -U /mnt >> /mnt/etc/fstab'
	if [ "$_swap" == "YES" ]; then
	   chroot /mnt apt-get install dphys-swapfile -y
	else
	return 0;
	fi
}
mk_swap

# Set system hostname
set_hostname() {
hostname=$(whiptail --inputbox "Input your desired hostname" 10 70 fluxuan --title "Configuration..." 3>&1 1>&2 2>&3)
exitstatus=$?
if [ $exitstatus = 0 ]; then
    d_conf HOSTNAME "$hostname"
    echo "$hostname" > /mnt/etc/hostname
	cat <<EOF > /mnt/etc/hosts
127.0.0.1	localhost
127.0.1.1	$hostname
# The following lines are desirable for IPv6 capable hosts
::1     localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
EOF
else
whiptail --title "Fluxuan-Installer" --msgbox "Thank you for using Fluxuan-Installer.
 
If I can help in any way please do not hesitate to ask on our Forums!

https://fluxuan.org     https://forums.fluxuan.org" 20 70
	rm "$CONF"
	clear ;
    exit 1 ;
fi
}
set_hostname

# Setting up Timezone
timezone() {
	  chroot /mnt dpkg-reconfigure tzdata
	
}
timezone

# Setting Up Locales
locales() {

	  chroot /mnt dpkg-reconfigure locales

}
locales

# Setting up keyboard configuration
xkb_cons() {
	  chroot /mnt dpkg-reconfigure keyboard-configuration
}
xkb_cons

# Setting Root Password
set_pass() {
PASSWD=$(whiptail --title "Fluxuan-Installer" --passwordbox "Choose your ROOT Password." 10 70 3>&1 1>&2 2>&3)
PASSWD_CHECK=$(whiptail --title "Fluxuan-Installer" --passwordbox "Verify Root Password" 10 70 3>&1 1>&2 2>&3)

if [[ "$PASSWD" == "$PASSWD_CHECK" ]]; then
	echo -e "$PASSWD\n$PASSWD" | chroot /mnt passwd root
else
	whiptail --title "Fluxuan-Installer" --msgbox "Thank you for using Fluxuan-Installer.
 
If I can help in any way please do not hesitate to ask on our Forums!

https://fluxuan.org     https://forums.fluxuan.org" 20 70
	rm "$CONF"
	clear ;
    exit 1 ;
fi
}
set_pass

# Creating Default User / changing password
set_default_user() {
	name=$(whiptail --inputbox "Create default USERNAME:" 10 70 fluxuan --title "Fluxuan-Installer" 3>&1 1>&2 2>&3)
	d_conf oldname "$name"
	oldname=$(awk -F: '/1000:1000/ { print $1 }' /mnt/etc/passwd)
	d_conf oldname "$oldname"
	  chroot /mnt usermod -l "$name" "$oldname"	
	  chroot /mnt usermod -d /home/"$name" -m "$name"	
	sleep 1
    PASSWD_USER=$(whiptail --title "Fluxuan-Installer" --passwordbox "Choose USER Password." 10 70 3>&1 1>&2 2>&3)
	PASSWD_CHECK_USER=$(whiptail --title "Fluxuan-Installer" --passwordbox "Verify USER Password " 10 70 3>&1 1>&2 2>&3)
	if [[ "$PASSWD_USER" == "$PASSWD_CHECK_USER" ]]; then
	echo -e "$PASSWD_USER\n$PASSWD_USER" | chroot /mnt passwd "$name"
	else
	whiptail --title "Fluxuan-Installer" --msgbox "Thank you for using Fluxuan-Installer.
 
If I can help in any way please do not hesitate to ask on our Forums!

https://fluxuan.org     https://forums.fluxuan.org" 20 70
	rm "$CONF"
    exit 1 ;
    fi
	

}
set_default_user


# Setup auto-login thanks to ( Refracta Installer )

auto_login() {
    local _name _oldname
    _name=$(d_read name)
    _oldname=$(d_read oldname)

    declare -A dm_configs

    # Add display manager configurations to the array
    dm_configs["/mnt/etc/gdm/gdm.conf"]="^AutomaticLogin"
    dm_configs["/mnt/etc/gdm3/daemon.conf"]="^AutomaticLogin"
    dm_configs["/mnt/etc/lightdm/lightdm.conf"]="^autologin"
    dm_configs["/mnt/etc/default/kdm.d/live-autologin"]=""
    dm_configs["/mnt/etc/kde3/kdm/kdmrc"]="^AutoLogin ^AutoReLogin"
    dm_configs["/mnt/etc/kde4/kdm/kdmrc"]="^AutoLogin ^AutoReLogin"
    dm_configs["/mnt/etc/default/kdm-trinity.d/live-autologin"]=""
    dm_configs["/mnt/etc/trinity/kdm/kdmrc"]="^AutoLogin ^AutoReLogin"
    dm_configs["/mnt/etc/default/tdm-trinity.d/live-autologin"]=""
    dm_configs["/mnt/etc/trinity/tdm/tdmrc"]="^AutoLogin ^AutoReLogin"
    dm_configs["/mnt/etc/slim.conf"]="^[ ]*default_user ^[ ]*auto_login"
    dm_configs["/mnt/etc/lxdm/lxdm.conf"]="^autologin="
    dm_configs["/mnt/etc/profile.d/zz-live-config_xinit.sh"]=""

    # Loop through display manager configurations and perform modifications
    for config in "${!dm_configs[@]}"; do
        file="$config"
        patterns="${dm_configs[$config]}"

        if [[ -f "$file" ]]; then
            for pattern in $patterns; do
                if [[ -n "$pattern" ]]; then
                    sed -i "s/$pattern/#$pattern/g" "$file"
                else
                    return 0
                fi
            done
        fi
    done

    if (whiptail --title "Fluxuan-Installer" --yesno "Would you like to be logged in automatically (auto login)? \n\n\nThank you for choosing Fluxuan." 20 70); then
        # Array of display manager configuration files
        local dm_files=(
            "/mnt/etc/gdm/gdm.conf"
            "/mnt/etc/gdm3/daemon.conf"
            "/mnt/etc/lightdm/lightdm.conf"
            "/mnt/etc/default/kdm.d/live-autologin"
            "/mnt/etc/kde3/kdm/kdmrc"
            "/mnt/etc/kde4/kdm/kdmrc"
            "/mnt/etc/default/kdm-trinity.d/live-autologin"
            "/mnt/etc/trinity/kdm/kdmrc"
            "/mnt/etc/default/tdm-trinity.d/live-autologin"
            "/mnt/etc/trinity/tdm/tdmrc"
            "/mnt/etc/slim.conf"
            "/mnt/etc/lxdm/lxdm.conf"
        )

        # Loop through display manager files and perform modifications
        for file in "${dm_files[@]}"; do
            if [[ -f "$file" ]]; then
                sed -i "s/$_oldname/$_name/g" "$file"
            fi
        done
    else
        return 0
    fi
}



# Fix Initramfs resume
initrd_resume() {
if [ -f  /mnt/etc/initramfs-tools/conf.d/resume ]; then
		rm -f /mnt/etc/initramfs-tools/conf.d/resume
	fi

}
initrd_resume


# Installing grub on selected partition /drive
setup_grub() {
	local _mode _disk
	_mode=$(d_read MODE)
	_disk=$(d_read DISK)
	if [ "$_mode" == "bios" ]; then 
		  chroot /mnt grub-install /dev/"$_disk" 
		  chroot /mnt update-grub 
	else 
		  chroot /mnt grub-install --target=x86_64-efi --efi-directory=/boot/efi
		  chroot /mnt update-grub
	fi
}
setup_grub

# Finish installation
finish() {
	on=$(awk -F: '/1000:1000/ { print $1 }' /mnt/etc/passwd)
	if (whiptail --title "Fluxuan-Installer" --yesno "Fluxuan is now installed. YES to reboot or NO to continue using live disk." 8 78); then
	rm "$CONF" ;
	rm -rf "/home/$on/.config/fxs" ;
    reboot
	else
    rm "$CONF" ;
    rm -rf "/home/$on/.config/fxs" ;
    exit 0 ;
	fi
}
finish
